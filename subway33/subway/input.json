{"LexDiagramId":4,"LCID":1033,"DiagramName":"Skills Path Details – Programming Technologies","DiagramDescription":"Skills Path Details – Programming Technologies","CreatedBy":"rob.collins@crank211.com","CreatedAt":"2015-05-18T13:30:37.137","ModifiedBy":"rob.collins@crank211.com","ModifiedAt":"2015-05-18T13:30:37.137","DiagramNodes":[{"DiagramNodeId":47,"ParentDiagramNodeId":null,"SecondaryParentDiagramNodeId":null,"DiagramNodeType":"StartNode","NodeTitle":"Applies language syntax and tools to achieve a functional requirement","NodeText":"Recognize various data/variable types\r\n\t\t\tDeclare and instantiate variables (includes scoping)\r\n\t\t\tPerform basic operations using numeric and string variables\r\n\t\t\tCreate arrays of various data types\r\n\t\t\tCreate looping and branching structures (for, while, switch)\r\n\t\t\tUse built-in functions (math, string, etc.)\r\n\t\t\tCreate functions and methods\r\n\t\t\tPass parameters to functions and methods\r\n\t\t\tCreate events and event handlers\r\n\t\t\tCreate reusable objects (.NET classes or equivalent structures)\r\n\t\t\tCreate and access properties of a class/object (include generics)\r\n\t\t\tUse essential tools built into Visual Studio (intellisence, solution window, etc.)","DurationInHours":null,"ChildNodeGroupId":null,"ParentNodeGroupId":null,"NodeTickValue":null,"NodeHexColor":"#000000","DiagramNodeDetailPageId":null,"DiagramConnectorDtos":[{"DiagramConnectorId":40,"StartDiagramNodeId":47,"EndDiagramNodeId":48,"ConnectorHexColor":"#FF8000","ConnectorTitle":null,"DiagramConnectorType":"Basic"}],"ChildGroup":null},{"DiagramNodeId":48,"ParentDiagramNodeId":47,"SecondaryParentDiagramNodeId":null,"DiagramNodeType":"Basic","NodeTitle":"Develops code to access and manage local and network data sources","NodeText":"Recognize different types of data sources (relational, csv, etc.) and when each should be used\r\n\t\t\tConnect to various data sources\r\n\t\t\tWrite code to CRUD data\r\n\t\t\tImplement SQL queries and stored procedures\r\n\t\t\tCreate data structures or dictionaries\r\n\t\t\tCreate test data and scripts\r\n\t\t\tImplement LINQ\r\n\t\t\tImplement Entity Framework ?","DurationInHours":null,"ChildNodeGroupId":null,"ParentNodeGroupId":null,"NodeTickValue":null,"NodeHexColor":"#000000","DiagramNodeDetailPageId":null,"DiagramConnectorDtos":[{"DiagramConnectorId":41,"StartDiagramNodeId":48,"EndDiagramNodeId":49,"ConnectorHexColor":"#FF8000","ConnectorTitle":null,"DiagramConnectorType":"Basic"}],"ChildGroup":null},{"DiagramNodeId":49,"ParentDiagramNodeId":48,"SecondaryParentDiagramNodeId":null,"DiagramNodeType":"Basic","NodeTitle":"Recognizes and implements program flow patterns","NodeText":"Create a flow chart (or other diagram) to represent a functional specification\r\n\t\tImplement asynchronous processes\r\n\t\tImplements threading and parallel processes\r\n\t\tImplement class inheritance (or equivalent)\r\n\t\tImplement polymorphism (or equivalent)","DurationInHours":null,"ChildNodeGroupId":null,"ParentNodeGroupId":null,"NodeTickValue":null,"NodeHexColor":"#000000","DiagramNodeDetailPageId":null,"DiagramConnectorDtos":[{"DiagramConnectorId":42,"StartDiagramNodeId":49,"EndDiagramNodeId":50,"ConnectorHexColor":"#FF8000","ConnectorTitle":null,"DiagramConnectorType":"Basic"}],"ChildGroup":null},{"DiagramNodeId":50,"ParentDiagramNodeId":49,"SecondaryParentDiagramNodeId":null,"DiagramNodeType":"Basic","NodeTitle":"Debugs code and develops appropriate exception handling prior to code check-in","NodeText":"Implement try-catch block\r\n\t\t\tImplement exception handling\r\n\t\t\tUse the debugger to control the execution of your application\r\n\t\t\tUse Breakpoints and Tracepoints \r\n\t\t\tVisualize and Debug Code Execution with Call Stacks in Visual Studio \r\n\t\t\tUse Edit and Continue in Visual Studio to change your source code while your program is in break mode \r\n\t\t\tDebug Threads and Processes in Visual Studio \r\n\t\t\tImplement Just-In-Time Debugging \r\n\t\t\tUse the Visual Studio Immediate window to execute a function or subroutine while your application is not running\r\n\t\t\tUse Dump Files to Debug App Crashes and Hangs in Visual Studio \r\n\t\t\tChecks-in and checks-out code","DurationInHours":null,"ChildNodeGroupId":null,"ParentNodeGroupId":null,"NodeTickValue":null,"NodeHexColor":"#000000","DiagramNodeDetailPageId":null,"DiagramConnectorDtos":[{"DiagramConnectorId":43,"StartDiagramNodeId":50,"EndDiagramNodeId":51,"ConnectorHexColor":"#FF8000","ConnectorTitle":null,"DiagramConnectorType":"Basic"}],"ChildGroup":null},{"DiagramNodeId":51,"ParentDiagramNodeId":50,"SecondaryParentDiagramNodeId":null,"DiagramNodeType":"Basic","NodeTitle":"Develops code that satisfies the specified performance requirements","NodeText":"Configure code analysis for a project\r\n\t\t\tRun code analysis\r\n\t\t\tAnalyze code analysis results\r\n\t\t\tAnalyzing application performance by using Profiling tools (basic)\r\n\t\t\tDescribe profiling process and tools (collect, view, and analyze)\r\n\t\t\tConfigure a profiling session\r\n\t\t\tControl the data that the profiler collects\r\n\t\t\tLocate performance issues\r\n\t\t\tAnalyze performance changes\r\n\t\t\tSave and share your results","DurationInHours":null,"ChildNodeGroupId":null,"ParentNodeGroupId":null,"NodeTickValue":null,"NodeHexColor":"#000000","DiagramNodeDetailPageId":null,"DiagramConnectorDtos":[{"DiagramConnectorId":44,"StartDiagramNodeId":51,"EndDiagramNodeId":52,"ConnectorHexColor":"#FF8000","ConnectorTitle":null,"DiagramConnectorType":"Basic"}],"ChildGroup":null},{"DiagramNodeId":52,"ParentDiagramNodeId":51,"SecondaryParentDiagramNodeId":null,"DiagramNodeType":"Basic","NodeTitle":"Recognizes and applies a specified design pattern","NodeText":"Describe the relationship between Architecture, Design Pattern, and Framework\r\n\t\t\tRecognize common architectures and when they should be used\r\n\t\t\tRecognize common design patterns and when a pattern can be applied to make programming tasks faster and easier\r\n\t\t\tDescribe 3-Tier/N-Tier Patterns\r\n\t\t\tDescribe traditional .NET (Gang of Four) Design Patterns\r\n\t\t\tCreational Patterns\r\n\t\t\tStructural Patterns\r\n\t\t\tBehavioral Patterns\r\n\t\t\tDescribe Enterprise Patterns\r\n\t\t\tDescribe Cloud Design Patterns\r\n\t\t\tDescribe Head First Patterns\r\n\t\t\tDescribe Repository Patterns\r\n\t\t\tDescribe  Unit of Work Patterns\r\n\t\t\tApplying ASP.NET  MVC pattern probably belongs in the Web track\r\n\t\t\tApplying MVVM Prism pattern probably belongs in LOB track\r\n\t\t\tApplying MVVM Prism for WinRT (UAP?) probably belongs in UAP track","DurationInHours":null,"ChildNodeGroupId":null,"ParentNodeGroupId":null,"NodeTickValue":null,"NodeHexColor":"#000000","DiagramNodeDetailPageId":null,"DiagramConnectorDtos":[],"ChildGroup":null}]}
